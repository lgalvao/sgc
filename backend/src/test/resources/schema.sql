-- Drop tables in an order that respects foreign key constraints
DROP TABLE IF EXISTS SGC.MOVIMENTACAO;
DROP TABLE IF EXISTS SGC.PROCESSO_PARTICIPANTES;
DROP TABLE IF EXISTS SGC.ANALISE_CADASTRO;
DROP TABLE IF EXISTS SGC.ANALISE_VALIDACAO;
DROP TABLE IF EXISTS SGC.SUBPROCESSO;
DROP TABLE IF EXISTS SGC.PROCESSO;
DROP TABLE IF EXISTS SGC.ALERTA;
DROP TABLE IF EXISTS SGC.NOTIFICACAO;
DROP TABLE IF EXISTS SGC.UNIDADE_MAPA;
DROP TABLE IF EXISTS SGC.ADMINISTRADOR;
DROP TABLE IF EXISTS SGC.USUARIO;
DROP TABLE IF EXISTS SGC.UNIDADE;
DROP TABLE IF EXISTS SGC.CONHECIMENTO;
DROP TABLE IF EXISTS SGC.COMPETENCIA_ATIVIDADE;
DROP TABLE IF EXISTS SGC.ATIVIDADE;
DROP TABLE IF EXISTS SGC.COMPETENCIA;
DROP TABLE IF EXISTS SGC.MAPA;

-- Sequences for ID generation
DROP SEQUENCE IF EXISTS SGC.UNIDADE_SEQ;
DROP SEQUENCE IF EXISTS SGC.MAPA_SEQ;
DROP SEQUENCE IF EXISTS SGC.COMPETENCIA_SEQ;
DROP SEQUENCE IF EXISTS SGC.ATIVIDADE_SEQ;
DROP SEQUENCE IF EXISTS SGC.CONHECIMENTO_SEQ;
DROP SEQUENCE IF EXISTS SGC.PROCESSO_SEQ;
DROP SEQUENCE IF EXISTS SGC.SUBPROCESSO_SEQ;
DROP SEQUENCE IF EXISTS SGC.MOVIMENTACAO_SEQ;
DROP SEQUENCE IF EXISTS SGC.ALERTA_SEQ;
DROP SEQUENCE IF EXISTS SGC.NOTIFICACAO_SEQ;
DROP SEQUENCE IF EXISTS SGC.UNIDADE_MAPA_SEQ;
DROP SEQUENCE IF EXISTS SGC.ANALISE_CADASTRO_SEQ;
DROP SEQUENCE IF EXISTS SGC.ANALISE_VALIDACAO_SEQ;
DROP SEQUENCE IF EXISTS SGC.COMPETENCIA_ATIVIDADE_SEQ;

CREATE SEQUENCE SGC.UNIDADE_SEQ START WITH 100 INCREMENT BY 1;
CREATE SEQUENCE SGC.MAPA_SEQ START WITH 100 INCREMENT BY 1;
CREATE SEQUENCE SGC.COMPETENCIA_SEQ START WITH 100 INCREMENT BY 1;
CREATE SEQUENCE SGC.ATIVIDADE_SEQ START WITH 100 INCREMENT BY 1;
CREATE SEQUENCE SGC.CONHECIMENTO_SEQ START WITH 100 INCREMENT BY 1;
CREATE SEQUENCE SGC.PROCESSO_SEQ START WITH 100 INCREMENT BY 1;
CREATE SEQUENCE SGC.SUBPROCESSO_SEQ START WITH 100 INCREMENT BY 1;
CREATE SEQUENCE SGC.MOVIMENTACAO_SEQ START WITH 100 INCREMENT BY 1;
CREATE SEQUENCE SGC.ALERTA_SEQ START WITH 100 INCREMENT BY 1;
CREATE SEQUENCE SGC.NOTIFICACAO_SEQ START WITH 100 INCREMENT BY 1;
CREATE SEQUENCE SGC.UNIDADE_MAPA_SEQ START WITH 100 INCREMENT BY 1;
CREATE SEQUENCE SGC.ANALISE_CADASTRO_SEQ START WITH 100 INCREMENT BY 1;
CREATE SEQUENCE SGC.ANALISE_VALIDACAO_SEQ START WITH 100 INCREMENT BY 1;
CREATE SEQUENCE SGC.COMPETENCIA_ATIVIDADE_SEQ START WITH 100 INCREMENT BY 1;


-- Create tables
CREATE TABLE SGC.USUARIO (
    titulo VARCHAR(20) PRIMARY KEY,
    nome VARCHAR(255) NOT NULL,
    email VARCHAR(255),
    ramal VARCHAR(255),
    unidade_codigo BIGINT
);

CREATE TABLE SGC.UNIDADE (
    codigo BIGINT PRIMARY KEY,
    nome VARCHAR(255) NOT NULL,
    sigla VARCHAR(255) NOT NULL,
    situacao VARCHAR(255),
    tipo VARCHAR(255),
    unidade_superior_codigo BIGINT,
    titular_titulo VARCHAR(20),
    CONSTRAINT fk_unidade_unidade_superior FOREIGN KEY (unidade_superior_codigo) REFERENCES SGC.UNIDADE(codigo),
    CONSTRAINT fk_unidade_titular FOREIGN KEY (titular_titulo) REFERENCES SGC.USUARIO(titulo)
);

ALTER TABLE SGC.USUARIO ADD CONSTRAINT fk_usuario_unidade FOREIGN KEY (unidade_codigo) REFERENCES SGC.UNIDADE(codigo);


CREATE TABLE SGC.ADMINISTRADOR (
    usuario_titulo VARCHAR(20) PRIMARY KEY,
    CONSTRAINT fk_administrador_usuario FOREIGN KEY (usuario_titulo) REFERENCES SGC.USUARIO(titulo)
);

CREATE TABLE SGC.MAPA (
    codigo BIGINT PRIMARY KEY,
    nome VARCHAR(255) NOT NULL,
    descricao VARCHAR(255),
    situacao VARCHAR(255),
    unidade_responsavel_codigo BIGINT,
    data_aprovacao DATE,
    data_vigencia DATE,
    CONSTRAINT fk_mapa_unidade FOREIGN KEY (unidade_responsavel_codigo) REFERENCES SGC.UNIDADE(codigo)
);

CREATE TABLE SGC.COMPETENCIA (
    codigo BIGINT PRIMARY KEY,
    descricao VARCHAR(255) NOT NULL,
    mapa_codigo BIGINT,
    CONSTRAINT fk_competencia_mapa FOREIGN KEY (mapa_codigo) REFERENCES SGC.MAPA(codigo)
);

CREATE TABLE SGC.ATIVIDADE (
    codigo BIGINT PRIMARY KEY,
    descricao VARCHAR(255) NOT NULL,
    mapa_codigo BIGINT,
    CONSTRAINT fk_atividade_mapa FOREIGN KEY (mapa_codigo) REFERENCES SGC.MAPA(codigo)
);

CREATE TABLE SGC.COMPETENCIA_ATIVIDADE (
    id BIGINT PRIMARY KEY,
    competencia_codigo BIGINT,
    atividade_codigo BIGINT,
    CONSTRAINT fk_competencia_atividade_competencia FOREIGN KEY (competencia_codigo) REFERENCES SGC.COMPETENCIA(codigo),
    CONSTRAINT fk_competencia_atividade_atividade FOREIGN KEY (atividade_codigo) REFERENCES SGC.ATIVIDADE(codigo)
);

CREATE TABLE SGC.CONHECIMENTO (
    codigo BIGINT PRIMARY KEY,
    descricao VARCHAR(255) NOT NULL,
    atividade_codigo BIGINT,
    CONSTRAINT fk_conhecimento_atividade FOREIGN KEY (atividade_codigo) REFERENCES SGC.ATIVIDADE(codigo)
);

CREATE TABLE SGC.PROCESSO (
    codigo BIGINT PRIMARY KEY,
    tipo VARCHAR(255) NOT NULL,
    situacao VARCHAR(255) NOT NULL,
    unidade_responsavel_codigo BIGINT,
    data_inicio DATE,
    data_fim DATE,
    mapa_codigo BIGINT,
    CONSTRAINT fk_processo_unidade FOREIGN KEY (unidade_responsavel_codigo) REFERENCES SGC.UNIDADE(codigo),
    CONSTRAINT fk_processo_mapa FOREIGN KEY (mapa_codigo) REFERENCES SGC.MAPA(codigo)
);

CREATE TABLE SGC.PROCESSO_PARTICIPANTES (
    processo_codigo BIGINT NOT NULL,
    participantes_codigo BIGINT NOT NULL,
    CONSTRAINT fk_processo_participantes_processo FOREIGN KEY (processo_codigo) REFERENCES SGC.PROCESSO(codigo),
    CONSTRAINT fk_processo_participantes_unidade FOREIGN KEY (participantes_codigo) REFERENCES SGC.UNIDADE(codigo)
);

CREATE TABLE SGC.SUBPROCESSO (
    codigo BIGINT PRIMARY KEY,
    processo_codigo BIGINT,
    unidade_codigo BIGINT,
    mapa_codigo BIGINT,
    situacao VARCHAR(255),
    data_limite_etapa1 DATE,
    data_limite_etapa2 DATE,
    data_limite_etapa3 DATE,
    data_limite_etapa4 DATE,
    CONSTRAINT fk_subprocesso_processo FOREIGN KEY (processo_codigo) REFERENCES SGC.PROCESSO(codigo),
    CONSTRAINT fk_subprocesso_unidade FOREIGN KEY (unidade_codigo) REFERENCES SGC.UNIDADE(codigo),
    CONSTRAINT fk_subprocesso_mapa FOREIGN KEY (mapa_codigo) REFERENCES SGC.MAPA(codigo)
);

CREATE TABLE SGC.MOVIMENTACAO (
    id BIGINT PRIMARY KEY,
    data_hora TIMESTAMP,
    descricao VARCHAR(255),
    subprocesso_codigo BIGINT,
    CONSTRAINT fk_movimentacao_subprocesso FOREIGN KEY (subprocesso_codigo) REFERENCES SGC.SUBPROCESSO(codigo)
);

CREATE TABLE SGC.ALERTA (
    id BIGINT PRIMARY KEY,
    mensagem VARCHAR(255),
    data_criacao TIMESTAMP,
    lido BOOLEAN,
    usuario_titulo VARCHAR(20),
    CONSTRAINT fk_alerta_usuario FOREIGN KEY (usuario_titulo) REFERENCES SGC.USUARIO(titulo)
);

CREATE TABLE SGC.NOTIFICACAO (
    id BIGINT PRIMARY KEY,
    mensagem VARCHAR(255),
    data_criacao TIMESTAMP,
    lido BOOLEAN,
    usuario_titulo VARCHAR(20),
    CONSTRAINT fk_notificacao_usuario FOREIGN KEY (usuario_titulo) REFERENCES SGC.USUARIO(titulo)
);

CREATE TABLE SGC.UNIDADE_MAPA (
    id BIGINT PRIMARY KEY,
    unidade_codigo BIGINT,
    mapa_vigente_codigo BIGINT,
    CONSTRAINT fk_unidademapa_unidade FOREIGN KEY (unidade_codigo) REFERENCES SGC.UNIDADE(codigo),
    CONSTRAINT fk_unidademapa_mapa FOREIGN KEY (mapa_vigente_codigo) REFERENCES SGC.MAPA(codigo)
);

CREATE TABLE SGC.ANALISE_CADASTRO (
    id BIGINT PRIMARY KEY,
    data_hora TIMESTAMP,
    acao VARCHAR(255),
    observacao VARCHAR(255),
    usuario_titulo VARCHAR(20),
    subprocesso_codigo BIGINT,
    CONSTRAINT fk_analisecadastro_usuario FOREIGN KEY (usuario_titulo) REFERENCES SGC.USUARIO(titulo),
    CONSTRAINT fk_analisecadastro_subprocesso FOREIGN KEY (subprocesso_codigo) REFERENCES SGC.SUBPROCESSO(codigo)
);

CREATE TABLE SGC.ANALISE_VALIDACAO (
    id BIGINT PRIMARY KEY,
    data_hora TIMESTAMP,
    acao VARCHAR(255),
    observacao VARCHAR(255),
    unidade_sigla VARCHAR(255),
    subprocesso_codigo BIGINT,
    CONSTRAINT fk_analisevalidacao_subprocesso FOREIGN KEY (subprocesso_codigo) REFERENCES SGC.SUBPROCESSO(codigo)
);